image: docker:latest
services:
  - docker:18-dind

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
    - if: $CI_COMMIT_BRANCH == "master"

stages:
  - build
  - npm-publish
  - package
  - deploy

maven-build:
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  cache:
    key: "maven-global-cache"
    paths:
      - ./.m2/repository/
  image: maven:3-jdk-8
  stage: build
  script:
      - "mvn deploy -s ci_settings.xml -Dspring.profiles.active=$SPRING_PROFILES_ACTIVE -Dspring.application.name=$SPRING_APPLICATION_NAME -Dspring.cloud.config.uri=$SPRING_CLOUD_CONFIG_URI -Dservice.discovery.uri=$SERVICE_DISCOVERY_URI"
  artifacts:
    paths:
      - api/target/app.jar
      - codegen/target/generated-resources/typescript
    when: always
    reports:
      junit:
        - api/target/surefire-reports/TEST-*.xml
        - config/target/surefire-reports/TEST-*.xml
        - data/target/surefire-reports/TEST-*.xml
        - search/target/surefire-reports/TEST-*.xml
        - service/target/surefire-reports/TEST-*.xml

npm-publish:
  image: node:15.4
  stage: npm-publish
  script:
    - cd codegen/target/generated-resources/typescript
    - echo "Publishing to NPM registry..."
    - npm config set "//gitlab.learnet.io/api/v4/projects/$CI_PROJECT_ID/packages/npm/:_authToken" "$CI_JOB_TOKEN"
    - npm config set @learnet:registry https://gitlab.learnet.io/api/v4/projects/$CI_PROJECT_ID/packages/npm/
    - npm install
    - npm audit fix --force
    - npm publish

docker-build:
  stage: package
  script:
    - docker login $CI_REGISTRY -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

k8s-deploy-staging:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  dependencies:
    - docker-build
  script:
    - kubectl config set-cluster k8s --server="$CLUSTER_ADDRESS"
    - kubectl config set clusters.k8s.certificate-authority-data $CLUSTER_CA_AUTH_DATA
    - kubectl config set-credentials gitlab-service-account --token=$K8S_TOKEN
    - kubectl config set-context default --cluster=k8s --user=gitlab-service-account --namespace=staging
    - kubectl config use-context default
    - kubectl delete secret $IMAGE_PULL_SECRET_NAME --ignore-not-found
    - kubectl delete -f deployment-dev.yml --namespace=staging --ignore-not-found
    - kubectl create secret docker-registry $IMAGE_PULL_SECRET_NAME --docker-server=https://$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD --docker-email=$GITLAB_USER_EMAIL
    - kubectl apply -f deployment-dev.yml --namespace=staging
  environment:
    name: staging
    url: $REVIEW_APP_URL
  only:
    - master
